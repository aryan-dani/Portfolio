@use "config" as *;
@use "animations";
@use "home";
@use "menu";
@use "jobs";
@use "project";
@use "about";
@use "certification";
@use "skills";
@use "copyright";
@use "footer";
@use "performance";
@use "toast";
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

html:focus-within {
  scroll-behavior: smooth;
}

// Base cursor for the entire page
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.6;
  font-family: "Poppins", sans-serif;
  background-color: $primary-color;
  color: $text-color; // Use variable
  overflow-x: hidden; // Prevent horizontal overflow
  transition: background-color $transition-speed ease-in-out,
    color $transition-speed ease-in-out;
  cursor: none !important; // Hide default cursor
}

// Larger cursor for interactive elements (Increased specificity and broader selection)
a,
button,
[role="button"],
input[type="submit"],
input[type="button"],
input[type="reset"],
input[type="image"],
select,
label,
summary,
[onclick],
.menu-btn,
.skills__card,
.project-card,
.certificate-content,
.certificate-image,
.toast-close,
.search-clear-btn,
.retry-button,
.cached-pages li a,
.contact-btn,
.submit-btn,
.category-tab,
.skill-modal__close,
.preview-container .close-preview,
.jobs-layout .Jobs h3 a,
.project-links a,
.tags-container h6,
.social-icons a,
.cta-button,
.home__name,
.project-card .content h3,
[data-interactive] {
  cursor: none !important; // Also hide cursor on interactive elements
}

// Elements that should explicitly use the default text cursor
input[type="text"],
input[type="email"],
input[type="search"],
input[type="password"],
textarea {
  cursor: none !important; // Hide cursor here too, custom cursor will adapt
}

// Custom Cursor Styles
.custom-cursor {
  position: fixed;
  top: 0;
  left: 0;
  width: 30px; // Size of the outer ring
  height: 30px;
  border: 2px solid rgba($text-color, 0.7); // Use variable
  border-radius: 50%;
  pointer-events: none; // Ignore mouse events on the cursor itself
  // transform: translate(-50%, -50%); // JS handles transform
  transition: width $transition-speed ease, height $transition-speed ease,
    border-color $transition-speed ease, background-color $transition-speed ease,
    border-radius $transition-speed ease, opacity $transition-speed ease,
    mix-blend-mode 0.1s ease; // Keep 0.1s for mix-blend-mode
  z-index: 99999; // Ensure it's on top
  mix-blend-mode: difference; // Cool effect against background
  opacity: 1; // Make sure it's visible initially
  display: block; // Keep display block

  &::after {
    // Inner dot
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 6px;
    height: 6px;
    background-color: rgba($text-color, 0.9); // Use variable
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width $transition-speed ease, height $transition-speed ease,
      background-color $transition-speed ease, opacity $transition-speed ease;
    opacity: 1;
    display: block; // Ensure inner dot is displayed
  }

  &.cursor--link-hovered {
    width: 50px; // Expand outer ring
    height: 50px;
    border-color: $secondary-color; // Change color
    background-color: rgba($secondary-color, 0.2); // Add subtle background

    &::after {
      // Expand inner dot slightly
      width: 8px;
      height: 8px;
      background-color: $secondary-color;
    }
  }

  &.cursor--text-hovered {
    // Style for text input hover
    width: 2px; // Thin like a caret
    height: 24px; // Taller like a caret
    border-radius: 1px;
    border-color: rgba($text-color, 0.9); // Use variable
    background-color: rgba($text-color, 0.9); // Use variable
    mix-blend-mode: normal; // Normal blend for text caret

    &::after {
      opacity: 0; // Hide inner dot
      width: 0;
      height: 0;
      display: none; // Explicitly hide inner dot
    }
  }

  // Add reduced motion preference
  @media (prefers-reduced-motion: reduce) {
    display: none !important; // Keep hiding if reduced motion
  }
}

html {
  font-size: 16px;
  scroll-behavior: smooth;

  @media (max-width: 1200px) {
    font-size: 15px;
  }

  @media (max-width: 992px) {
    font-size: 14px;
  }

  @media (max-width: 768px) {
    font-size: 13px;
  }

  @media screen and (max-width: 576px) {
    font-size: 12px;
  }
}

a {
  text-decoration: none;
  color: $text-color; // Use variable
  transition: color 0.2s ease, transform 0.2s ease;

  &:hover {
    color: darken($text-color, 10%); // Use variable
  }

  &:focus-visible {
    outline: 2px solid $secondary-color;
    outline-offset: 2px;
  }
}

.text-secondary {
  color: rgba(darken($primary-color, 10%), 0.8);
  position: relative;
  display: inline-block;
  font-weight: bold;
}

header {
  position: fixed;
  z-index: 2;
  width: 100%;
  padding: 1rem;
  transition: background-color $transition-speed ease;

  &.scrolled {
    background-color: rgba($primary-color, 0.95);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
  }
}

main {
  height: 100%;
  width: 100%;
  transition: margin-top 0.5s cubic-bezier(0.26, 0.86, 0.44, 0.985);
  will-change: transform, opacity;
}

.page-loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: $primary-color;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  transition: opacity 0.5s ease, visibility 0.5s ease;

  &.loaded {
    opacity: 0;
    visibility: hidden;
  }

  &__spinner {
    width: 50px;
    height: 50px;
    border: 3px solid rgba($text-color, 0.3); // Use variable
    border-radius: 50%;
    border-top-color: $secondary-color;
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}

.animate-on-scroll {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;

  &.visible,
  &.in-view {
    opacity: 1;
    transform: translateY(0);
  }
}
