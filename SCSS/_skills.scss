@use "config" as *;
@use "mixins" as *;
@use "animations" as *;

// Particles container styling
#particles-js {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
  background-color: $primary-color;
  overflow: hidden;
}

.skills {
  min-height: calc(100vh - 60px);
  padding: 2rem;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;

  &__heading {
    font-size: 2.8rem; // Slightly reduced
    font-weight: 700;
    margin-bottom: 3rem; // Slightly reduced
    padding: 12px 25px; // Reduced padding
    text-transform: uppercase;
    position: relative;
    text-align: center;
    color: $secondary-color;
    text-shadow: 0 4px 12px rgba(0, 0, 0, 0.5); // Adjusted shadow
    border: 1px solid rgba($secondary-color, 0.3); // Subtle border
    background: linear-gradient(145deg, rgba($primary-color, 0.1), rgba(darken($primary-color, 5%), 0.2)); // Subtle gradient background
    border-radius: 10px; // Slightly rounded corners
    // animation: neonPulse 3s infinite; // Consider removing or adjusting if too distracting

    &::before {
      // Adjust or remove the ::before pseudo-element if it clashes
      content: "";
      position: absolute;
      top: -8px;
      left: -8px;
      right: -8px;
      bottom: -8px;
      background: linear-gradient(45deg, rgba($secondary-color, 0.3), transparent 40%, rgba($secondary-color, 0.3) 60%, transparent 80%, rgba($secondary-color, 0.3));
      background-size: 300% 300%;
      z-index: -1;
      filter: blur(15px); // Slightly more blur
      opacity: 0.7;
      // animation: shimmer 6s linear infinite; // Slower shimmer
    }
  }

  &__search-filter {
    display: flex;
    // Default to row layout, allow wrapping
    flex-direction: row;
    flex-wrap: wrap;
    // Center items horizontally by default
    justify-content: center;
    align-items: center; // Center items vertically
    gap: 1.5rem;
    margin-bottom: 2.5rem;
    position: relative;
    z-index: 1;
    width: 100%;
    max-width: 900px; // Slightly increase max-width if needed
    margin-left: auto;
    margin-right: auto;
    padding: 1rem 1.5rem; // Adjusted padding
    background: rgba(darken($primary-color, 3%), 0.5);
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);

    // Remove the media-md block changing direction, as row is default now
    // @include media-md { ... }
  }

  // Skills Search Input Styles
  .skills-search {
    // Adjust width and flexibility
    width: auto; // Let it size based on content/max-width
    flex-grow: 1; // Allow growing
    flex-shrink: 1; // Allow shrinking
    max-width: 400px; // Keep max-width
    margin: 0; // Remove specific margins, rely on gap

    .form-control {
      width: 100%;
      padding: 0.8rem 1.2rem; // Increase padding
      font-size: 1rem;
      border-radius: 6px;
      border: 1px solid rgba($secondary-color, 0.4);
      background-color: rgba(lighten($primary-color, 5%), 0.8);
      color: #eee;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;

      &::placeholder {
        color: rgba(#eee, 0.6);
      }

      &:focus {
        border-color: $secondary-color;
        box-shadow: 0 0 10px rgba($secondary-color, 0.5);
        outline: none;
        background-color: rgba(lighten($primary-color, 8%), 0.9);
      }
    }
  }


  &__categories {
    // Adjust width and flexibility
    width: auto; // Let it size based on content
    flex-grow: 1; // Allow growing (or set to 0 if search should dominate)
    flex-shrink: 1; // Allow shrinking
    margin: 0; // Remove specific margins, rely on gap

    .category-tabs {
      display: flex;
      flex-wrap: wrap;
      justify-content: center; // Center tabs within their container
      gap: 10px;

      @include media-md {
        justify-content: flex-end; // Align right on larger screens if preferred
        gap: 15px;
      }

      .category-tab {
        background: rgba(darken($primary-color, 5%), 0.7);
        border: 2px solid transparent;
        color: #fff;
        padding: 0.5rem 1rem; // Adjust padding for consistency
        border-radius: 12px;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.68, -0.6, 0.32, 1.6);
        position: relative;
        overflow: hidden;
        animation: borderFlash 4s infinite; // Use animation from _animations.scss

        &:nth-child(odd) {
          animation-delay: 0.7s;
        }

        &:nth-child(3n) {
          animation-delay: 1.3s;
        }

        &::before {
          content: "";
          position: absolute;
          top: 50%;
          left: 50%;
          width: 0;
          height: 0;
          background: rgba($secondary-color, 0.2);
          border-radius: 50%;
          transform: translate(-50%, -50%);
          transition: all 0.5s ease;
          z-index: -1;
        }

        &:hover,
        &.active {
          border-color: $secondary-color;
          transform: translateY(-3px) scale(1.1);
          box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
          animation: neonPulse 1.5s infinite; // Use animation from _animations.scss

          &::before {
            width: 300%;
            height: 300%;
            animation: spinGlow 8s linear infinite; // Use animation from _animations.scss
          }
        }

        &.active {
          background: rgba($secondary-color, 0.3);
          font-weight: bold;
          text-shadow: 0 0 10px rgba($secondary-color, 0.8);
          box-shadow: 0 0 15px rgba($secondary-color, 0.5);
        }

        &:hover:not(.active) {
          background: rgba(darken($primary-color, 10%), 0.8);
        }
      }
    }
  }

  &__container {
    width: 100%;
    max-width: 1200px;
    justify-content: center;
    perspective: 1500px;
    position: relative;
    z-index: 1;
    margin: 0 auto;
    // Remove display: grid from here initially

    // REMOVE this block - it conflicts with the JS logic
    // &.all-view-active {
    //   display: grid; 
    //   grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    //   gap: 1.5rem;
    //   width: 100%;
    //   .skills__group {
    //     display: none !important; 
    //   }
    //   > .skills__card {
    //       display: block; 
    //   }
    // }
  }

  &__group {
    display: none; // Keep hidden by default
    // Use auto-fit instead of auto-fill
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); 
    gap: 1.5rem;
    width: 100%; // Groups should take full width of the container
    opacity: 0; // Start hidden for animation
    transform: translateY(20px); // Start slightly lower for animation
    transition: opacity 0.5s ease, transform 0.5s ease; // Smooth transition
    margin-bottom: 2rem; // Add some space between groups when multiple are shown (like in 'All')

    &.active {
      display: grid; // Ensure grid display when active
      opacity: 1; // Fade in
      transform: translateY(0); // Slide up
    }
  }

  &__card {
    // display: block; // Remove default display here, JS will control it
    // Ensure cards are initially hidden or managed by JS display style
    border-radius: 10px;
    background: rgba(lighten($primary-color, 3%), 0.8);
    overflow: hidden;
    cursor: pointer;
    height: 150px;
    position: relative;
    transform-style: preserve-3d; // Ensure 3D context
    transition: transform 0.3s ease, box-shadow 0.3s ease, opacity 0.3s ease; // Keep transition for other effects if needed
    cursor: pointer; // Ensure cursor is pointer

    // Use mixins for consistent styling
    @include card-hover;
    @include animated-border($secondary-color); // Use mixin from _mixins.scss
    animation: neonPulse 4s infinite; // Use animation from _animations.scss

    // Special styling for "All" category
    .active-all & {
      height: 150px;

      &.expanded {
        height: 250px;
      }

      h3 {
        font-size: 1.1rem;
      }

      i {
        font-size: 2.5rem;
      }
    }

    &.expanded {
      height: 240px; // Expanded height when clicked
      transform: scale(1.05);
      z-index: 10;
      box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
      animation: neonPulse 2s infinite; // Use animation from _animations.scss

      .skills__card-front {
        transform: translateY(-100%);
      }

      .skills__card-back {
        transform: translateY(0);
      }
    }

    // Glow effect on hover that matches site theme
    &::after {
      content: "";
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(45deg,
          $secondary-color,
          darken($secondary-color, 20%),
          $secondary-color );
      z-index: -1;
      filter: blur(12px);
      opacity: 0;
      transition: opacity 0.3s ease;
      border-radius: 10px;
    }

    &:hover {
      transform: translateY(-8px) scale(1.02);
      box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);
      animation: floatAnimation 3s ease infinite; // Use animation from _animations.scss

      &::after {
        opacity: 0.8;
        animation: spinGlow 8s linear infinite; // Use animation from _animations.scss
      }

      .skills__card-front i {
        animation: pulse 1.5s ease infinite alternate; // Use animation from _animations.scss
        color: lighten($secondary-color, 10%);
        transform: scale(1.1);
      }

      .skills__card-front h3 {
        background-image: linear-gradient(90deg,
            rgba($secondary-color, 0.7),
            rgba(#fff, 0.9),
            rgba($secondary-color, 0.7));
        background-size: 200% auto;
        color: transparent;
        -webkit-background-clip: text;
        background-clip: text;
        animation: shimmer 2s linear infinite; // Use animation from _animations.scss
      }
    }

    &-front,
    &-back {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 1.2rem;
      backface-visibility: hidden;
      transition: transform 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);

      i {
        transition: all 0.3s ease;
        margin-bottom: 1rem;
      }
    }

    &-front {
      background: linear-gradient(135deg,
          rgba(lighten($primary-color, 5%), 0.9),
          rgba(lighten($primary-color, 2%), 0.9));

      h3 {
        margin-top: 0.5rem;
        font-size: 1.2rem;
        font-weight: 600;
        text-align: center;
        color: #fff;
        text-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
      }

      i {
        color: $secondary-color;
        filter: drop-shadow(0 0 8px rgba($secondary-color, 0.6));
        font-size: 3.2rem;
      }
    }

    &-back {
      background: linear-gradient(135deg,
          rgba(darken($primary-color, 5%), 0.95),
          rgba(darken($primary-color, 15%), 0.95));
      transform: translateY(100%);
      overflow: hidden;

      p {
        color: #ddd;
        font-size: 0.85rem;
        line-height: 1.5;
        text-align: center;
        margin-top: 1rem;
      }
    }
  }

  &__progress {
    width: 100%;
    height: 8px;
    background: rgba(#fff, 0.1);
    border-radius: 8px;
    overflow: hidden;
    position: relative;
    margin-top: 0.5rem;
    box-shadow: 0 0 10px rgba($secondary-color, 0.3) inset;

    &-bar {
      height: 100%;
      background: linear-gradient(90deg,
          $secondary-color,
          lighten($secondary-color, 20%));
      background-size: 200% 100%;
      border-radius: 8px;
      width: 0;
      transition: width 1.2s cubic-bezier(0.22, 0.61, 0.36, 1);
      position: relative;
      animation: shimmer 2s linear infinite; // Use animation from _animations.scss

      &::before {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        width: 5px;
        background-color: #fff;
        opacity: 0.6;
        border-radius: 0 8px 8px 0;
      }

      &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 30px;
        height: 100%;
        background: rgba(255, 255, 255, 0.3);
        filter: blur(5px);
        animation: shimmer 2s linear infinite; // Use animation from _animations.scss
      }
    }

    &-percent {
      position: absolute;
      right: 5px;
      top: -20px;
      font-size: 0.8rem;
      color: #fff;
      text-shadow: 0 0 5px rgba($secondary-color, 0.8);
      animation: pulse 2s ease infinite; // Use animation from _animations.scss
    }
  }
}

// Tech Stack section styling
.tech-stack {
  width: 100%;
  max-width: 1000px;
  margin: 3rem auto 0;

  &__heading {
    font-size: 2rem;
    margin-bottom: 2rem;
    text-transform: uppercase;
    letter-spacing: 2px;
    text-align: center;
    color: #fff;
    position: relative;

    &::after {
      content: "";
      position: absolute;
      bottom: -10px;
      left: 50%;
      width: 100px;
      height: 3px;
      background: $secondary-color;
      transform: translateX(-50%);
    }
  }

  &__badges {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    padding: 1rem;

    img {
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      transform: scale(1);
      position: relative;

      &:nth-child(odd) {
        animation: floatAnimation 4s ease-in-out infinite; // Use animation from _animations.scss
      }

      &:nth-child(even) {
        animation: floatAnimation 4s ease-in-out infinite 0.5s; // Use animation from _animations.scss
      }

      &:nth-child(3n) {
        animation: floatAnimation 4s ease-in-out infinite 1s; // Use animation from _animations.scss
      }

      &:hover {
        transform: translateY(-10px) scale(1.1) rotate(3deg);
        filter: drop-shadow(0 10px 20px rgba($secondary-color, 0.5));
        animation: none; // Keep this override
        z-index: 10;
      }

      &::after {
        content: "";
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        background: linear-gradient(45deg, $secondary-color, transparent);
        border-radius: 4px;
        z-index: -1;
        opacity: 0;
        transition: opacity 0.3s ease;
      }

      &:hover::after {
        opacity: 0.7;
        animation: spinGlow 4s linear infinite; // Use animation from _animations.scss
      }
    }
  }
}

// Media queries for responsive design
@media screen and (max-width: 992px) {
  .skills {
    &__group {
      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    }

    &__heading {
      font-size: 2.5rem;
    }
  }
}

@media screen and (max-width: 768px) {
  .skills {
    padding: 1.5rem;

    &__group {
      grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
      gap: 1.2rem;
    }

    &__card {
      height: 140px;

      &.expanded {
        height: 220px;
      }

      &-front {
        i {
          font-size: 2.8rem;
        }

        h3 {
          font-size: 1rem;
        }
      }
    }

    &__categories .category-tabs {
      gap: 10px;

      .category-tab {
        padding: 0.6rem 1rem;
        font-size: 0.9rem;
      }
    }
  }
}

@media screen and (max-width: 576px) {
  .skills {
    &__group {
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 1rem;
    }

    &__heading {
      font-size: 2rem;
      margin-bottom: 2rem;
    }
  }
}